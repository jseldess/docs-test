"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7391],{7775:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>r,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>o,toc:()=>c});var n=a(5893),s=a(1151);const d={title:"Creating and loading private datasets",category:"6495c32609a24b00434e5b53"},i=void 0,o={id:"data/datasets/creating-datasets",title:"Creating and loading private datasets",description:"Overview",source:"@site/versioned_docs/version-legacy/data/datasets/creating-datasets.md",sourceDirName:"data/datasets",slug:"/data/datasets/creating-datasets",permalink:"/docs/legacy/data/datasets/creating-datasets",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-legacy/data/datasets/creating-datasets.md",tags:[],version:"legacy",frontMatter:{title:"Creating and loading private datasets",category:"6495c32609a24b00434e5b53"},sidebar:"examplesSidebar",previous:{title:"Data",permalink:"/docs/legacy/category/data-3"},next:{title:"Pinecone public datasets",permalink:"/docs/legacy/data/datasets/pinecone-public-datasets"}},r={},c=[{value:"Overview",id:"overview",level:2},{value:"Creating a dataset",id:"creating-a-dataset",level:2},{value:"Dependencies",id:"dependencies",level:3},{value:"Dataset metadata",id:"dataset-metadata",level:3},{value:"Viewing dataset schema",id:"viewing-dataset-schema",level:3},{value:"Running tests",id:"running-tests",level:3},{value:"Uploading and listing a dataset",id:"uploading-and-listing-a-dataset",level:2},{value:"Using your own dataset",id:"using-your-own-dataset",level:2},{value:"Authenticating to your own storage bucket",id:"authenticating-to-your-own-storage-bucket",level:3},{value:"Accessing a non-listed dataset",id:"accessing-a-non-listed-dataset",level:3},{value:"What&#39;s next",id:"whats-next",level:2}];function l(e){const t={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,n.jsx)(t.p,{children:"This document explains how to create, upload, and list your dataset for use by other Pinecone users. This guide shows how to create your own dataset using your own storage; you cannot upload your own dataset to the Pinecone dataset directory."}),"\n",(0,n.jsxs)(t.p,{children:["To learn about using existing Pinecone datasets, see ",(0,n.jsx)(t.a,{href:"using-public-datasets",children:"Using public Pinecone datasets"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"creating-a-dataset",children:"Creating a dataset"}),"\n",(0,n.jsx)(t.h3,{id:"dependencies",children:"Dependencies"}),"\n",(0,n.jsxs)(t.p,{children:["The Pinecone datasets project uses ",(0,n.jsx)(t.code,{children:"poetry"})," for dependency management and supports python versions 3.8+."]}),"\n",(0,n.jsx)(t.p,{children:"To install poetry, run the following command from the project root directory:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",children:"poetry install --with dev\n"})}),"\n",(0,n.jsx)(t.h3,{id:"dataset-metadata",children:"Dataset metadata"}),"\n",(0,n.jsx)(t.p,{children:"To create a public dataset, you may need to generate dataset metadata."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Example"})}),"\n",(0,n.jsxs)(t.p,{children:["The following example creates a metadata object ",(0,n.jsx)(t.code,{children:"meta"})," containing metadata for a dataset ",(0,n.jsx)(t.code,{children:"test_dataset"}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'from pinecone_datasets.catalog import DatasetMetadata\n\nmeta = DatasetMetadata(\n    name="test_dataset",\n    created_at="2023-02-17 14:17:01.481785",\n    documents=2,\n    queries=2,\n    source="manual",\n    bucket="LOCAL",\n    task="unittests",\n    dense_model={"name": "bert", "dimension": 3},\n    sparse_model={"name": "bm25"},\n)\n'})}),"\n",(0,n.jsx)(t.p,{children:"If you intend to list your dataset, you can save the dataset metadata using the following command. Write permission to location is needed."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'dataset._save_metadata("non-listed-dataset", meta)\n'})}),"\n",(0,n.jsx)(t.h3,{id:"viewing-dataset-schema",children:"Viewing dataset schema"}),"\n",(0,n.jsx)(t.p,{children:"To see the complete schema, run the following command:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"meta.schema()\n"})}),"\n",(0,n.jsx)(t.h3,{id:"running-tests",children:"Running tests"}),"\n",(0,n.jsx)(t.p,{children:"To run tests locally, run the following command:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",children:"poetry run pytest --cov pinecone_datasets\n"})}),"\n",(0,n.jsx)(t.h2,{id:"uploading-and-listing-a-dataset",children:"Uploading and listing a dataset"}),"\n",(0,n.jsx)(t.p,{children:"Pinecone datasets can load a dataset from any storage bucket where it has access using the default access controls for s3, gcs or local permissions."}),"\n",(0,n.jsx)(t.p,{children:"Pinecone datasets expects data to be uploaded with the following directory structure:"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Figure 1: Expected directory structure for Pinecone datasets"})}),"\n",(0,n.jsxs)(t.p,{children:["\u251c\u2500\u2500 base_path                     # path to where all datasets\n\u2502   \u251c\u2500\u2500 dataset_id                # name of dataset\n\u2502   \u2502   \u251c\u2500\u2500 metadata.json         # dataset metadata (optional, only for listed)\n\u2502   \u2502   \u251c\u2500\u2500 documents             # datasets documents\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 file1.parquet",(0,n.jsx)(t.br,{}),"\n","\u2502   \u2502   \u2502   \u2514\u2500\u2500 file2.parquet",(0,n.jsx)(t.br,{}),"\n","\u2502   \u2502   \u251c\u2500\u2500 queries               # dataset queries\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 file1.parquet",(0,n.jsx)(t.br,{}),"\n","\u2502   \u2502   \u2502   \u2514\u2500\u2500 file2.parquet",(0,n.jsx)(t.br,{}),"\n","\u2514\u2500\u2500 ..."]}),"\n",(0,n.jsx)(t.p,{children:"Pinecone datasets scans storage and lists every dataset with metadata file."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Example"})}),"\n",(0,n.jsx)(t.p,{children:"The following shows the format of an example s3 bucket address for a datasets metadata file:"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"s3://my-bucket/my-dataset/metadata.json"})}),"\n",(0,n.jsx)(t.h2,{id:"using-your-own-dataset",children:"Using your own dataset"}),"\n",(0,n.jsxs)(t.p,{children:["By default, the Pinecone client uses Pinecone's public datasets bucket on GCS. You can use your own bucket by setting the ",(0,n.jsx)(t.code,{children:"PINECONE_DATASETS_ENDPOINT"})," environment variable."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Example"})}),"\n",(0,n.jsxs)(t.p,{children:["The following export command changes the default dataset storage endpoint to ",(0,n.jsx)(t.code,{children:"gs://my-bucket"}),". Calling ",(0,n.jsx)(t.code,{children:"list_datasets"})," or ",(0,n.jsx)(t.code,{children:"load_dataset"})," now scans that bucket and list all datasets."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'export PINECONE_DATASETS_ENDPOINT="gs://my-bucket"\n'})}),"\n",(0,n.jsxs)(t.p,{children:["You can also use ",(0,n.jsx)(t.code,{children:"s3://"})," as a prefix to your bucket to access an s3 bucket."]}),"\n",(0,n.jsx)(t.h3,{id:"authenticating-to-your-own-storage-bucket",children:"Authenticating to your own storage bucket"}),"\n",(0,n.jsx)(t.p,{children:"Pinecone Datasets supports GCS and S3 storage buckets, using default authentication as provided by the fsspec implementation: gcsfs for GCS and s3fs for AWS."}),"\n",(0,n.jsx)(t.p,{children:"To authenticate to an AWS s3 bucket using the key/secret method, follow these steps:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["Set a new endpoint by setting the environment variable ",(0,n.jsx)(t.code,{children:"PINECONE_DATASETS_ENDPOINT"})," to the s3 address for your bucket."]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Example"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",children:'export PINECONE_DATASETS_ENDPOINT="s3://my-bucket"\n'})}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["Use the key and secret parameters to pass your credentials to the ",(0,n.jsx)(t.code,{children:"list_datasets"})," and ",(0,n.jsx)(t.code,{children:"load_dataset"})," functions."]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Example"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'st = list_datasets(\n        key=os.environ.get("S3_ACCESS_KEY"),\n        secret=os.environ.get("S3_SECRET"),\n    )\n\nds = load_dataset(\n        "test_dataset",\n        key=os.environ.get("S3_ACCESS_KEY"),\n        secret=os.environ.get("S3_SECRET"),\n)\n'})}),"\n",(0,n.jsx)(t.h3,{id:"accessing-a-non-listed-dataset",children:"Accessing a non-listed dataset"}),"\n",(0,n.jsxs)(t.p,{children:["To access a non-listed dataset, load it directly using the ",(0,n.jsx)(t.code,{children:"Dataset"})," constructor."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Example"})}),"\n",(0,n.jsxs)(t.p,{children:["The following loads the dataset ",(0,n.jsx)(t.code,{children:"non-listed-dataset"}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'from pinecone_datasets import Dataset\n\ndataset = Dataset("non-listed-dataset")\n'})}),"\n",(0,n.jsx)(t.h2,{id:"whats-next",children:"What's next"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Learn more about ",(0,n.jsx)(t.a,{href:"https://pinecone-io.github.io/pinecone-datasets/pinecone_datasets.html",children:"using datasets in the Pinecone Python client"})]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},1151:(e,t,a)=>{a.d(t,{Z:()=>o,a:()=>i});var n=a(7294);const s={},d=n.createContext(s);function i(e){const t=n.useContext(d);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(d.Provider,{value:t},e.children)}}}]);