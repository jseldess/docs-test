"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6841],{477:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var r=n(5893),a=n(1151);const i={title:"Querying sparse-dense vectors",category:"6495c32609a24b00434e5b53"},t=void 0,o={id:"data/hybrid-search-and-sparse-vectors/query-sparse-dense-vectors",title:"Querying sparse-dense vectors",description:"Overview",source:"@site/versioned_docs/version-legacy/data/hybrid-search-and-sparse-vectors/query-sparse-dense-vectors.md",sourceDirName:"data/hybrid-search-and-sparse-vectors",slug:"/data/hybrid-search-and-sparse-vectors/query-sparse-dense-vectors",permalink:"/docs/legacy/data/hybrid-search-and-sparse-vectors/query-sparse-dense-vectors",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-legacy/data/hybrid-search-and-sparse-vectors/query-sparse-dense-vectors.md",tags:[],version:"legacy",frontMatter:{title:"Querying sparse-dense vectors",category:"6495c32609a24b00434e5b53"},sidebar:"examplesSidebar",previous:{title:"Understanding hybrid search",permalink:"/docs/legacy/data/hybrid-search-and-sparse-vectors/hybrid-search"},next:{title:"Sparse-dense vectors",permalink:"/docs/legacy/data/hybrid-search-and-sparse-vectors/sparse-dense-vectors"}},c={},d=[{value:"Overview",id:"overview",level:2},{value:"Querying records with sparse-dense values",id:"querying-records-with-sparse-dense-values",level:2},{value:"Querying a sparse-dense index with explicit weighting",id:"querying-a-sparse-dense-index-with-explicit-weighting",level:2}];function l(e){const s={a:"a",blockquote:"blockquote",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(s.p,{children:["Pinecone supports vectors with sparse and dense values, which allows you to perform ",(0,r.jsx)(s.a,{href:"hybrid-search",children:"hybrid search"}),". This topic describes how to query sparse-dense vectors in Pinecone."]}),"\n",(0,r.jsxs)(s.p,{children:["Pinecone only supports upserting sparse-dense vectors to ",(0,r.jsx)(s.code,{children:"p1"})," and ",(0,r.jsx)(s.code,{children:"s1"})," indexes."]}),"\n",(0,r.jsx)(s.h2,{id:"querying-records-with-sparse-dense-values",children:"Querying records with sparse-dense values"}),"\n",(0,r.jsxs)(s.p,{children:["To query records with sparse-dense values, use the ",(0,r.jsx)(s.code,{children:"query"})," operation, specifying a value for ",(0,r.jsx)(s.a,{href:"/reference/query",children:(0,r.jsx)(s.code,{children:"sparse_vector"})}),", which is an object containing the key-value pairs ",(0,r.jsx)(s.code,{children:"indices"})," and ",(0,r.jsx)(s.code,{children:"values"}),"."]}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:["\u26a0\ufe0f  Warning\nProviding a value for ",(0,r.jsx)(s.code,{children:"sparse_values"})," to the ",(0,r.jsx)(s.code,{children:"query"})," operation does not result in querying the sparse values. Use ",(0,r.jsx)(s.code,{children:"sparse_vector"})," instead."]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"The following example queries an index using a sparse-dense vector."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"query_response = index.query(\n    top_k=10,\n    vector=[0.1, 0.2, 0.3],\n    sparse_vector={\n        'indices': [10, 45, 16],\n        'values':  [0.5, 0.5, 0.2]\n    }\n)\n"})}),"\n",(0,r.jsxs)(s.p,{children:["The value of ",(0,r.jsx)(s.code,{children:"query_response"})," is like the following:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"{'matches': [{'id': 'vec5', 'score': 0.44, 'values': []},\n             {'id': 'vec1', 'score': 0.32, 'values': []},\n             {'id': 'vec2', 'score': 0.26000002, 'values': []},\n             {'id': 'vec3', 'score': 0.200000018, 'values': []},\n             {'id': 'vec4', 'score': 0.140000015, 'values': []}]\n}\n"})}),"\n",(0,r.jsxs)(s.p,{children:["In order to query an index using sparse values, the index must use ",(0,r.jsxs)(s.a,{href:"indexes#distance-metrics",children:["the ",(0,r.jsx)(s.code,{children:"dotproduct"})," metric"]}),". Attempting to query any other index with sparse values returns an error."]}),"\n",(0,r.jsx)(s.h2,{id:"querying-a-sparse-dense-index-with-explicit-weighting",children:"Querying a sparse-dense index with explicit weighting"}),"\n",(0,r.jsx)(s.p,{children:"Because Pinecone's index views your sparse-dense vector as a single vector, it does not offer a built-in parameter to adjust the weight of a query's dense part against its sparse part; the index is agnostic to density or sparsity of coordinates in your vectors. You may, however, incorporate a linear weighting scheme by customizing your query vector, as we demonstrate in the function below."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Examples"})}),"\n",(0,r.jsx)(s.p,{children:"The following example transforms vector values using an alpha parameter."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"def hybrid_score_norm(dense, sparse, alpha: float):\n    \"\"\"Hybrid score using a convex combination\n\n    alpha * dense + (1 - alpha) * sparse\n\n    Args:\n        dense: Array of floats representing\n        sparse: a dict of `indices` and `values`\n        alpha: scale between 0 and 1\n    \"\"\"\n    if alpha < 0 or alpha > 1:\n        raise ValueError(\"Alpha must be between 0 and 1\")\n    hs = {\n        'indices': sparse['indices'],\n        'values':  [v * (1 - alpha) for v in sparse['values']]\n    }\n    return [v * alpha for v in dense], hs\n"})}),"\n",(0,r.jsx)(s.p,{children:"The following example transforms a vector using the above function, then queries a Pinecone index."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"sparse_vector = {\n   'indices': [10, 45, 16],\n   'values':  [0.5, 0.5, 0.2]\n}\ndense_vector = [0.1, 0.2, 0.3]\n\nhdense, hsparse = hybrid_score_norm(dense_vector, sparse_vector, alpha=0.75)\n\nquery_response = index.query(\n    namespace=\"example-namespace\",\n    top_k=10,\n    vector=hdense,\n    sparse_vector=hsparse\n)\n"})})]})}function h(e={}){const{wrapper:s}={...(0,a.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>o,a:()=>t});var r=n(7294);const a={},i=r.createContext(a);function t(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);