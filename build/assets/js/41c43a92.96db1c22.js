"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5519],{8949:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var r=s(5893),t=s(1151);const o={title:"Encoding sparse vectors",category:"6495c32609a24b00434e5b53"},c=void 0,i={id:"data/hybrid-search-and-sparse-vectors/encode-sparse-vectors",title:"Encoding sparse vectors",description:"Overview",source:"@site/docs/data/hybrid-search-and-sparse-vectors/encode-sparse-vectors.md",sourceDirName:"data/hybrid-search-and-sparse-vectors",slug:"/data/hybrid-search-and-sparse-vectors/encode-sparse-vectors",permalink:"/docs/./data/hybrid-search-and-sparse-vectors/encode-sparse-vectors",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/data/hybrid-search-and-sparse-vectors/encode-sparse-vectors.md",tags:[],version:"current",frontMatter:{title:"Encoding sparse vectors",category:"6495c32609a24b00434e5b53"},sidebar:"examplesSidebar",previous:{title:"Manage datasets",permalink:"/docs/./data/datasets"},next:{title:"Understanding hybrid search",permalink:"/docs/./data/hybrid-search-and-sparse-vectors/hybrid-search"}},a={},d=[{value:"Overview",id:"overview",level:2},{value:"Install the Pinecone Text Client",id:"install-the-pinecone-text-client",level:2},{value:"Initialize the encoder and fit the corpus",id:"initialize-the-encoder-and-fit-the-corpus",level:2},{value:"Encode documents for Pinecone",id:"encode-documents-for-pinecone",level:2},{value:"Next steps",id:"next-steps",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["Pinecone supports vectors with sparse and dense values, which allows you to perform ",(0,r.jsx)(n.a,{href:"hybrid-search",children:"hybrid search"}),", or semantic and keyword search over your data in one query, for more relevant results. This topic describes how to use the ",(0,r.jsx)(n.a,{href:"https://github.com/pinecone-io/pinecone-text/blob/main/README.md",children:"Pinecone Text Client"})," to encode sparse vectors for use in Pinecone hybrid search."]}),"\n",(0,r.jsx)(n.p,{children:"To convert your own text corpus to sparse vectors, you can either use BM25 or SPLADE. This guide uses BM25, which is more common."}),"\n",(0,r.jsxs)(n.p,{children:["Learn more about ",(0,r.jsx)(n.a,{href:"https://www.pinecone.io/learn/hybrid-search-intro/",children:"sparse and dense vectors"})," in our Learning Center."]}),"\n",(0,r.jsxs)(n.p,{children:["For an example of encoding sparse vectors at scale, see our ",(0,r.jsx)(n.a,{href:"https://colab.research.google.com/github/pinecone-io/examples/blob/master/learn/search/semantic-search/sparse/bm25/bm25-vector-generation.ipynb",children:"BM25 vector generation notebook"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"install-the-pinecone-text-client",children:"Install the Pinecone Text Client"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"https://github.com/pinecone-io/pinecone-text/blob/main/README.md",children:"Pinecone Text Client"})," is a public Python package that provides text utilities designed for seamless integration with Pinecone's sparse-dense (hybrid) search."]}),"\n",(0,r.jsx)(n.p,{children:"To install the Pinecone Text Client, use the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"pip install pinecone-text\n"})}),"\n",(0,r.jsx)(n.h2,{id:"initialize-the-encoder-and-fit-the-corpus",children:"Initialize the encoder and fit the corpus"}),"\n",(0,r.jsx)(n.p,{children:"Before encoding sparse vectors for use in hybrid search, you must initialize the BM25 encoder and fit it to your corpus of documents."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example"})}),"\n",(0,r.jsxs)(n.p,{children:["The following example initializes a ",(0,r.jsx)(n.code,{children:"BM25Encoder"})," object and calls the ",(0,r.jsx)(n.code,{children:"fit()"})," function on the corpus, formatted as an array of strings."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from pinecone_text.sparse import BM25Encoder\n\ncorpus = ["The quick brown fox jumps over the lazy dog",\n          "The lazy dog is brown",\n          "The fox is brown"]\n\n# Initialize BM25 and fit the corpus.\nbm25 = BM25Encoder()\nbm25.fit(corpus)\n'})}),"\n",(0,r.jsxs)(n.p,{children:["If you want to use the default parameters for ",(0,r.jsx)(n.code,{children:"BM25Encoder"}),", you can call the ",(0,r.jsx)(n.code,{children:"default"})," method. The default parameters were fitted on the MS MARCO passage ranking dataset."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"bm25 = BM25Encoder.default()\n"})}),"\n",(0,r.jsx)(n.h2,{id:"encode-documents-for-pinecone",children:"Encode documents for Pinecone"}),"\n",(0,r.jsx)(n.p,{children:"After the encoder is initialized and fit, you can encode documents as sparse vectors."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example"})}),"\n",(0,r.jsx)(n.p,{children:"The following example encodes a new document as a sparse vector for upsert to a Pinecone index."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'doc_sparse_vector = bm25.encode_documents("The brown fox is quick")\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Now, the contents of ",(0,r.jsx)(n.code,{children:"doc_sparse_vector"})," are like the following:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{"indices": [102, 18, 12, ...], "values": [0.21, 0.38, 0.15, ...]}\n'})}),"\n",(0,r.jsx)(n.p,{children:"You can encode a string as a sparse vector for use in a hybrid search query in the same way."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example"})}),"\n",(0,r.jsx)(n.p,{children:"The following example encodes a string as a sparse vector for use in a hybrid search query."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'query_sparse_vector = bm25.encode_queries("Which fox is brown?")\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Now, the contents of ",(0,r.jsx)(n.code,{children:"query_sparse_vector"})," are like the following:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-JSON",children:'{"indices": [102, 16, 18, ...], "values": [0.21, 0.11, 0.15, ...]}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Learn how to ",(0,r.jsx)(n.a,{href:"upsert-sparse-dense-vectors",children:"upsert sparse-dense vectors"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Learn more about the ",(0,r.jsx)(n.a,{href:"https://github.com/pinecone-io/pinecone-text",children:"Pinecone Text Client"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>i,a:()=>c});var r=s(7294);const t={},o=r.createContext(t);function c(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);