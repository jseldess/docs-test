"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8835],{5056:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var s=t(5893),i=t(1151);const r={id:"overview",title:"Overview",description:"An introduction to the Pinecone vector database.",sidebar_position:1},a=void 0,o={id:"getting-started/overview",title:"Overview",description:"An introduction to the Pinecone vector database.",source:"@site/docs/getting-started/overview.md",sourceDirName:"getting-started",slug:"/getting-started/overview",permalink:"/docs/./getting-started/overview",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"overview",title:"Overview",description:"An introduction to the Pinecone vector database.",sidebar_position:1},sidebar:"examplesSidebar",previous:{title:"Getting Started",permalink:"/docs/./category/getting-started-3"},next:{title:"Quickstart",permalink:"/docs/./getting-started/quickstart"}},d={},c=[{value:"Vector embeddings provide long-term memory for AI.",id:"vector-embeddings-provide-long-term-memory-for-ai",level:2},{value:"Vector databases store and query embeddings quickly and at scale.",id:"vector-databases-store-and-query-embeddings-quickly-and-at-scale",level:2},{value:"Pinecone indexes store records with vector data.",id:"pinecone-indexes-store-records-with-vector-data",level:2},{value:"Pinecone queries are fast and fresh.",id:"pinecone-queries-are-fast-and-fresh",level:2},{value:"Upsert and query vector embeddings with the Pinecone API.",id:"upsert-and-query-vector-embeddings-with-the-pinecone-api",level:2},{value:"Query your index for the most similar vectors.",id:"query-your-index-for-the-most-similar-vectors",level:2},{value:"Get started",id:"get-started",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Pinecone makes it easy to provide long-term memory for high-performance AI applications. It\u2019s a managed, cloud-native ",(0,s.jsx)(n.a,{href:"https://www.pinecone.io/learn/vector-database/",children:"vector database"})," with a ",(0,s.jsx)(n.a,{href:"https://docs.pinecone.io/reference/",children:"simple API"})," and no infrastructure hassles. Pinecone serves fresh, filtered query results with low latency at the scale of billions of vectors."]}),"\n",(0,s.jsx)(n.h2,{id:"vector-embeddings-provide-long-term-memory-for-ai",children:"Vector embeddings provide long-term memory for AI."}),"\n",(0,s.jsxs)(n.p,{children:["Applications that involve large language models, generative AI, and semantic search rely on ",(0,s.jsx)(n.a,{href:"https://www.pinecone.io/learn/vector-embeddings-for-developers/",children:"vector embeddings"}),", a type of data that represents semantic information. This information allows AI applications to gain understanding and maintain a long-term memory that they can draw upon when executing complex tasks."]}),"\n",(0,s.jsx)(n.h2,{id:"vector-databases-store-and-query-embeddings-quickly-and-at-scale",children:"Vector databases store and query embeddings quickly and at scale."}),"\n",(0,s.jsx)(n.p,{children:"Vector databases like Pinecone offer optimized storage and querying capabilities for embeddings. Traditional scalar-based databases can\u2019t keep up with the complexity and scale of such data, making it difficult to extract insights and perform real-time analysis. Vector indexes like FAISS lack useful features that are present in any database. Vector databases combine the familiar features of traditional databases with the optimized performance of vector indexes."}),"\n",(0,s.jsx)(n.h2,{id:"pinecone-indexes-store-records-with-vector-data",children:"Pinecone indexes store records with vector data."}),"\n",(0,s.jsx)(n.p,{children:"Each record in a Pinecone index contains a unique ID and an array of floats representing a dense vector embedding."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://raw.githubusercontent.com/pinecone-io/img/main/record-diagram.png",alt:"Pinecone record diagram"})}),"\n",(0,s.jsxs)(n.p,{children:["Each record may also contain a ",(0,s.jsx)(n.a,{href:"https://docs.pinecone.io/docs/hybrid-search",children:"sparse vector embedding"})," for hybrid search and ",(0,s.jsx)(n.a,{href:"https://docs.pinecone.io/docs/metadata-filtering",children:"metadata key-value pairs"})," for filtered queries."]}),"\n",(0,s.jsx)(n.h2,{id:"pinecone-queries-are-fast-and-fresh",children:"Pinecone queries are fast and fresh."}),"\n",(0,s.jsxs)(n.p,{children:["Pinecone returns low-latency, accurate results for indexes with billions of vectors. ",(0,s.jsx)(n.a,{href:"https://docs.pinecone.io/docs/indexes#p2-pods",children:"High-performance pods"})," return up to 200 queries per second per replica. Queries reflect up-to-the-second updates such as upserts and deletes. ",(0,s.jsx)(n.a,{href:"https://docs.pinecone.io/docs/namespaces",children:"Filter by namespaces"})," and ",(0,s.jsx)(n.a,{href:"https://docs.pinecone.io/docs/metadata-filtering",children:"metadata"})," or ",(0,s.jsx)(n.a,{href:"https://docs.pinecone.io/docs/scaling-indexes",children:"add resources"})," to improve performance."]}),"\n",(0,s.jsx)(n.h2,{id:"upsert-and-query-vector-embeddings-with-the-pinecone-api",children:"Upsert and query vector embeddings with the Pinecone API."}),"\n",(0,s.jsxs)(n.p,{children:["Perform CRUD operations and query your vectors using HTTP, ",(0,s.jsx)(n.a,{href:"https://docs.pinecone.io/docs/python-client",children:"Python"}),", or ",(0,s.jsx)(n.a,{href:"https://docs.pinecone.io/docs/node-client",children:"Node.js"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"index = pinecone.Index('example-index') \n\nupsert_response = index.upsert(\n    vectors=[\n        {'id': 'vec1',\n         'values': [0.1, 0.2, 0.3],\n         'metadata': {'genre': 'drama'},\n         'sparse_values': {\n             'indices': [10, 45, 16],\n             'values': [0.5, 0.5, 0.2]\n         }},\n        {'id': 'vec2',\n         'values': [0.2, 0.3, 0.4],\n         'metadata': {'genre': 'action'},\n         'sparse_values': {\n             'indices': [15, 40, 11],\n             'values': [0.4, 0.5, 0.2]\n         }}\n    ],\n    namespace='example-namespace'\n)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"query-your-index-for-the-most-similar-vectors",children:"Query your index for the most similar vectors."}),"\n",(0,s.jsxs)(n.p,{children:["Specify the ",(0,s.jsx)(n.a,{href:"https://docs.pinecone.io/docs/indexes#distance-metrics",children:"distance metric"})," your index uses to evaluate vector similarity, along with ",(0,s.jsx)(n.a,{href:"https://docs.pinecone.io/docs/manage-indexes#creating-an-index",children:"dimensions"})," and ",(0,s.jsx)(n.a,{href:"https://docs.pinecone.io/docs/manage-indexes#replicas",children:"replicas"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'pinecone.create_index("example-index", dimension=128, metric="euclidean", pods=4, pod_type="s1.x1")\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'await pinecone.createIndex({\n  name: "example-index",\n  dimension: 128,\n  metric: "euclidean",\n  pods: 4,\n  podType: "s1.x1",\n});\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",metastring:"curl",children:'curl -i -X POST https://controller.YOUR_ENVIRONMENT.pinecone.io/databases \\\n  -H \'Api-Key: YOUR_API_KEY\' \\\n  -H \'Content-Type: application/json\' \\\n  -d \'{\n    "name": "example-index",\n    "dimension": 128,\n    "metric": "euclidean",\n    "pods": 4,\n    "pod_type": "p1.x1"\n  }\'\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.a,{href:"https://docs.pinecone.io/docs/query-data#sending-a-query",children:["Find the top ",(0,s.jsx)(n.code,{children:"k"})," most similar vectors"]}),", or query by ID."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"index.query(\n  vector=[0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3],\n  top_k=3,\n  include_values=True\n)\n\n# Returns:\n# {'matches': [{'id': 'C',\n#               'score': -1.76717265e-07,\n#               'values': [0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3]},\n#                   {'id': 'B',\n#                    'score': 0.080000028,\n#                    'values': [0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2]},\n#                   {'id': 'D',\n#                    'score': 0.0800001323,\n#                    'values': [0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4]}],\n# }\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const index = pinecone.Index(\"example-index\");\nconst queryRequest = {\n  vector: [0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3],\n  topK: 3,\n  includeValues: true\n};\nconst queryResponse = await index.query({ queryRequest });\n\n// Returns:\n// {'matches': [{'id': 'C',\n//               'score': -1.76717265e-07,\n//               'values': [0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3]},\n//                   {'id': 'B',\n//                    'score': 0.080000028,\n//                    'values': [0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2]},\n//                   {'id': 'D',\n//                    'score': 0.0800001323,\n//                    'values': [0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4]}],\n// }\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",metastring:"curl",children:"curl -i -X POST https://hello-pinecone-YOUR_PROJECT.svc.YOUR_ENVIRONMENT.pinecone.io/query \\\n  -H 'Api-Key: YOUR_API_KEY' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"vector\":[0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3],\n    \"topK\": 3,\n    \"includeValues\": true\n  }'\n"})}),"\n",(0,s.jsx)(n.h2,{id:"get-started",children:"Get started"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://docs.pinecone.io/docs/quickstart",children:"Go to the quickstart guide"})," to get a production-ready vector search service up and running in minutes."]})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>a});var s=t(7294);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);